import org.junit.Test;

import static org.junit.Assert.*;

public class ser222_unit7_hw02_baseTest {

    @Test
    public void testRandBetween(){
        int lower = 1;
        int upper = 25;
        int random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);
        random = ser222_unit7_hw02_base.randBetween(1,25);
        assertTrue(2 < random);
        assertTrue(24 > random);


    }
    @Test
    public void testValidSubArea(){
        assertFalse(ser222_unit7_hw02_base.validSubArea(1,1,1,1));

    }

}